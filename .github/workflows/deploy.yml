name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false

      - name: 🔧 Configure environment variables
        run: |
          echo "REACT_APP_CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}" >> $GITHUB_ENV
          echo "REACT_APP_AI_FEATURES_ENABLED=true" >> $GITHUB_ENV

      - name: 🏗️ Build application
        run: npm run build
        env:
          REACT_APP_CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          REACT_APP_AI_FEATURES_ENABLED: true
          CI: false # Treat warnings as warnings, not errors

      - name: 🔍 Verify build output
        run: |
          echo "Build completed successfully!"
          echo "Build directory contents:"
          ls -la build/
          echo "Static JS files:"
          ls -la build/static/js/ | head -5

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notification job
  notify:
    if: always()
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: 📝 Deployment status
        run: |
          if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Deployment successful!"
            echo "🌐 Your app is live at: https://tarunkurma.github.io/risk-portfolio-mgr-thd"
            echo "🤖 Claude AI features are enabled with secure API key"
          else
            echo "❌ Deployment failed. Check the logs above."
          fi
